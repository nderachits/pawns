
buildscript {
    ext {
//        springBootVersion = "1.0.2.RELEASE"
    }

    repositories {
        maven { url "http://repo.spring.io/libs-snapshot" }
        mavenLocal()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.4.0.RELEASE")
    }
}
apply plugin: 'java'
apply plugin: 'spring-boot'


jar {
    destinationDir = file('jar')
    baseName = 'pawn-boot'
    version = '0.1.0'
}

repositories {
    mavenCentral()
    maven { url "http://repo.spring.io/libs-snapshot" }
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter-web")
//        exclude module: "spring-boot-starter-tomcat"
//    compile("org.springframework.boot:spring-boot-starter-jetty")
    compile("org.springframework.boot:spring-boot-starter-security")
    compile("org.springframework.mobile:spring-mobile-device")
    compile("org.springframework:spring-websocket")
    compile("org.springframework.security:spring-security-config")
    compile("org.springframework.security:spring-security-web")
    compile("org.springframework.security:spring-security-test")
    compile("org.thymeleaf:thymeleaf-spring4")
    testCompile("junit:junit:4.12")
    testCompile("org.hamcrest:hamcrest-library:1.3")
    testCompile("org.mockito:mockito-core:1.+")
    testCompile("org.springframework:spring-test")
    testCompile("org.springframework.boot:spring-boot-test")
    testCompile("com.jayway.jsonpath:json-path-assert:0.8.1")
}

task jenkinsTest{
    inputs.files test.outputs.files
    doLast{
        def timestamp = System.currentTimeMillis()
        test.reports.junitXml.destination.eachFile { it.lastModified = timestamp }
    }
}
build.dependsOn(jenkinsTest)

task wrapper(type: Wrapper) {
    gradleVersion = '4.6'
}

